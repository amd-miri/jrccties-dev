<?php
/**
 * @file
 * Code for the wiki feature.
 */

include_once('wiki_core.features.inc');



/**
* Implements hook_element_info_alter().
*
* Sets the text format processor to a custom callback function.
* This code is taken from the Better Formats module.
*/

/*
function wiki_core_element_info_alter(&$type) {
  if (isset($type['text_format']['#process'])) {
    foreach ($type['text_format']['#process'] as &$callback) {
      if ($callback === 'filter_process_format') {
        $callback = 'wiki_core_format_filter_process_format';
      }
    }
  }
}
*/

/*
* hook_filter_process_format
*/
/*
function wiki_core_format_filter_process_format($element) {
  $element = filter_process_format($element);
  if(isset($element['#bundle'])) {
    // Change the default text format of the 'body' field to ' wiki'.
    if ($element['#bundle'] == 'wiki' && $element['#field_name'] == 'body') {
      $element['format']['format']['#default_value'] = 'wiki';
    }
  }
  return $element;
}
*/

/**
 * Implementation of hook_token_info().
 */
function wiki_core_token_info() {
    $info['types']['Breadcrumb_wiki'] = array(
        'name' => 'Breadcrumb_wiki',
        'description' => 'Tokens related to Breadcrumb.',
    );
    $info['tokens']['Breadcrumb_wiki']["wiki_title"] = array(
        'name' => t("wiki Breadcrumb title"),
        'description' => t("The Breadcrumb title of the wiki."),
    );
    return $info;
}

/**
 * Implements hook_tokens().
 *
 */
function wiki_core_tokens($type, $tokens, $data = array(), $options = array()) {
    $replacements = array();
    $sanitize = !empty($options['sanitize']);
    // tokens for e_libray_core Breadcrumb
    if ($type == 'Breadcrumb_wiki') {
        foreach ($tokens as $name => $original) {
            switch ($name) {
                case 'wiki_title':
                    $replacements[$original] = t("wiki");
                    break;
            }
        }
    }
    return $replacements;
}
