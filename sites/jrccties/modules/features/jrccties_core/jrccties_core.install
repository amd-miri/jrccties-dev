<?php

/**
 * @file
 * This file contains the jrccties_core feature install functions.
 */

/**
 * Implements hook_enable().
 */
function jrccties_core_enable() {
  drupal_set_message(t("The feature jrccties_core has been enabled."), 'status');
}

/**
 * Implements hook_disable().
 */
function jrccties_core_disable() {
  drupal_set_message(t("The feature jrccties_core has been disabled."), 'status');
}

/**
 * Implements hook_schema().
 */
function jrccties_core_schema() {
  $schema['jrccties_core'] = array(
    'description' => 'Relate Entityform to Organic Groups',
    'fields' => array(
      'eid' => array(
        'description' => 'Primary Key: Unique Eform ID.',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'gid' => array(
        'description' => 'group ID',
        'type'        => 'int',
        'not null'    => TRUE,
      ),
      'uid' => array(
        'description' => 'user ID',
        'type'        => 'int',
        'not null'    => TRUE,
      ),
      'is_eform' => array(
        'description' => 'Is the OG community created with Entityform? Boolean',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('eid'),
  );
  return $schema;
}

/**
 * Enable the privatemsg sub-modules and disable the Media browser plus module.
 */
function jrccties_core_update_7001() {
  module_enable(array('pm_block_user',
    'pm_email_notify',
    'privatemsg_filter',
    'privatemsg_limits',
    'privatemsg_realname',
    'privatemsg_roles',
    'privatemsg_rules',
  ),
  TRUE);
  if (module_exists('media_browser_plus')) {
    module_disable(array('media_browser_plus'), FALSE);
    drupal_uninstall_modules(array('media_browser_plus'));
  }
}

/**
 * Enable the poll, statistics and statistics_counter module.
 */
function jrccties_core_update_7002() {
  module_enable(array('poll', 'statistics', 'statistics_counter'), TRUE);
}

/**
 * Enable context_og, pdf_reader and better_exposed_filters modules.
 */
function jrccties_core_update_7003() {
  module_enable(array('context_og', 'pdf_reader', 'better_exposed_filters'), TRUE);
}

/**
 * Enable redirect, match_redirect and metatag modules.
 */
function jrccties_core_update_7004() {
  module_enable(array('redirect',
    'match_redirect',
    'metatag',
    'metatag_context',
    'metatag_facebook',
    'metatag_google_plus',
    'metatag_mobile',
    'metatag_opengraph',
    'metatag_twitter_cards',
    'metatag_views',
  ),
  TRUE);
}

/**
 * Disable the mapeditor module.
 */
function jrccties_core_update_7005() {
  module_disable(array('mapeditor'), FALSE);
  drupal_uninstall_modules(array('mapeditor'));
}

/**
 * Remove css and js injector.
 */
function jrccties_core_update_7006() {
  module_disable(array(
    'js_injector',
    'css_injector',
  ), FALSE);
  drupal_uninstall_modules(array(
    'js_injector',
    'css_injector',
  ), FALSE);
}

/**
 * Enable comment_og module.
 */
function jrccties_core_update_7007() {
  module_enable(array('comment_og'), TRUE);
}

/**
 * Disable comment_og and enable two other modules.
 */
function jrccties_core_update_7008() {
  module_disable(array(
    'comment_og',
  ), FALSE);
  drupal_uninstall_modules(array(
    'comment_og',
  ), FALSE);
  module_enable(array(
    'og_comments_access',
    'og_vocab',
  ), TRUE);
}

/**
 * Enable feeds modules.
 */
function jrccties_core_update_7009() {
  module_enable(array(
    'feeds',
    'feeds_ui',
    'feeds_tamper',
    'feeds_tamper_ui',
    'feeds_et',
    'feeds_ex',
    'entityform',
  ), TRUE);
}

/**
 * Install database schema for keeping track of entityforms for og.
 */
function jrccties_core_update_7010() {
  drupal_install_schema('jrccties_core');
}

/**
 * Enable flag_notify modules.
 */
function jrccties_core_update_7011() {
  module_enable(array(
    'flag_notify',
  ), TRUE);
}

/**
 * Enable feeds_entity_processor and advanced poll module.
 */
function jrccties_core_update_7012() {
  module_enable(array(
    'feeds_entity_processor',
    'advpoll',
  ), TRUE);
}

/**
 * Disable pool module.
 */
function jrccties_core_update_7013() {
  module_disable(array(
    'poll',
  ), TRUE);
}

/**
 * Disable Feeds entity processor module.
 */
function jrccties_core_update_7014() {
  module_disable(array(
    'feeds_entity_processor',
  ), TRUE);
}

/**
 * Maps and Imports specific user's profile information.
 *
 * Into dedicated entityform for Alumni community.
 */
function jrccties_core_update_7015() {

  $group_members = drupal_json_encode(_jrccties_core_get_users_in_group(2));
  $members = drupal_json_decode($group_members);

  foreach ($members as $member) {
    $account = user_load($member['uid']);
    $user_account = entity_metadata_wrapper('user', $account);

    $entityform = entity_create('entityform', array(
      'type' => "alumni_network",
      'created' => time(),
      'changed' => time(),
      'language' => LANGUAGE_NONE,
      'uid' => $member['uid'],
    ));

    // We simplify our lifes using Entity API.
    $wrapper = entity_metadata_wrapper('entityform', $entityform);
    // Mapping from User's profile into Community specific entity form begins.
    $wrapper->field_complete_name->set($account->realname);
    $wrapper->field_current_position_organis->set($user_account->field_current_position_organis->raw());
    $wrapper->field_type_of_organisation->set($user_account->field_type_of_organisation->raw());
    $wrapper->field_field_of_expertise->set($user_account->field_field_of_expertise->raw());
    $wrapper->field_fields_of_interest->set($user_account->field_fields_of_interest->raw());
    $wrapper->field_nationality->set($user_account->field_nationality->raw());
    $wrapper->field_date2->set($user_account->field_date2->raw());
    $wrapper->field_specify_other->set($user_account->field_specify_other->raw());
    $wrapper->field_management_positio->set($user_account->field_management_positio->raw());
    $wrapper->field_add_position_managment->set($user_account->field_add_position_managment->raw());
    $wrapper->field_do_did_you_work_at_jrc_->set($user_account->field_do_did_you_work_at_jrc_->raw());
    $wrapper->field_jrc_career->set($user_account->field_jrc_career->raw());
    $wrapper->field_jrc_directorate_institute->set($user_account->field_jrc_directorate_institute->raw());
    $wrapper->field_jrc_career_date->set($user_account->field_jrc_career_date->raw());
    $wrapper->field_are_you_interested_to_coll->set($user_account->field_are_you_interested_to_coll->raw());
    $wrapper->field_interest_in_collaboration_->set($user_account->field_interest_in_collaboration_->raw());
    $wrapper->field_upload_cv->set($user_account->field_upload_cv->raw());
    $wrapper->field_question_fields_expertise->set($user_account->field_question_fields_expertise->raw());
    $wrapper->field_other_field_of_expertise->set($user_account->field_other_field_of_expertise->raw());
    $wrapper->field_interested_in_alumni_group->set($user_account->field_interested_in_alumni_group->raw());
    $wrapper->field_how_do_you_intend_to_get_i->set($user_account->field_how_do_you_intend_to_get_i->raw());
    $wrapper->field_do_you_have_any_other_sugg->set($user_account->field_do_you_have_any_other_sugg->raw());
    // Import data begins.
    $wrapper->save();
  }
}

/**
 * Enable og_menu_default_links module.
 */
function jrccties_core_update_7016() {
  module_enable(array(
    'og_menu_default_links',
  ), TRUE);
}

/**
 * Disable metatag_mobile module.
 */
function jrccties_core_update_7017() {
  module_disable(array(
    'metatag_mobile',
  ), FALSE);
  drupal_uninstall_modules(array(
    'metatag_mobile',
  ), FALSE);
}

/**
 * Disable some modules.
 */
function jrccties_core_update_7018() {
  module_disable(array(
    'feeds_entity_processor',
    'og_field_access',
  ), FALSE);
  drupal_uninstall_modules(array(
    'feeds_entity_processor',
    'og_field_access',
  ), FALSE);
}

/**
 * Erase the unused jrccties_core table.
 */
function jrccties_core_update_7019() {
  db_delete('jrccties_core')->execute();
}
