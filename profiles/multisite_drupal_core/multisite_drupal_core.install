<?php

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */

function multisite_drupal_core_install() {
  include_once DRUPAL_ROOT . '/profiles/standard/standard.install';

  standard_install();

  // disable modules
  module_disable (array ('toolbar','dashboard'));

  drupal_uninstall_modules (array ('toolbar','dashboard'),FALSE);

  // add dummy terms in 'tags' vocabulary -------------------------------------------------------------------------------------------------------------------------
   $vocabulary = taxonomy_vocabulary_machine_name_load('tags');
  $term = new stdClass();
  $term->name = "sport";
  $term->vid = $vocabulary->vid;
  taxonomy_term_save($term);

  $term = new stdClass();
  $term->name = "economic";
  $term->vid = $vocabulary->vid;
  taxonomy_term_save($term);

  // create new roles -------------------------------------------------------------------------------------------------------------------------------------------------------
  // contributor role
  $role = new stdClass();
  $role->name = 'contributor';
  user_role_save($role);

  // add permissions to roles ----------------------------------------------------------------------------------------------------------------------------------------------
  // permissions related to articles content type
  user_role_grant_permissions($role->rid, array(
    'create article content',
    'delete own article content',
    'edit own article content',
  ));

  // permissions related to workbench moderation
  user_role_grant_permissions($role->rid, array(
    //'create article content',
    //'delete own article content',
    //'edit own article content',
    'view own unpublished content',
    'view revisions',
    'access workbench',
    'use workbench_moderation my drafts tab',
    'use workbench_moderation needs review tab',
    'view moderation messages',
    'moderate content from draft to needs_review',
    'view moderation history',
    'revert revisions',
  ));

  // authentificated user role
  $au_rid = get_rid('authenticated user');
  user_role_grant_permissions($au_rid, array(
    'view own unpublished content',
    'view revisions',
    'access workbench',
    //'use workbench_moderation my drafts tab',
    //'use workbench_moderation needs review tab',
    'view moderation messages',
    //'moderate content from draft to needs_review',
    'view moderation history',
    //'revert revisions',
    'access print',
    'access PDF version',
    'access site-wide contact form',
    'access user contact forms',
    'access user profiles',
    'use text format full_html',
  ));

  // administrator role
  $adm_rid = get_rid('administrator');
  user_role_revoke_permissions($adm_rid, array(
    'administer modules',
    'administer features',
    'manage features',
    'administer software updates',
    //'administer shortcuts',
    //'customize shortcut links',
    //'switch shortcut sets',
    'use PHP to import nodes',

  ));

  // anonymous role
  $anu_rid = get_rid('anonymous user');
  user_role_grant_permissions($anu_rid, array(
    'post comments',
    'access print',
    'access PDF version',
    'access site-wide contact form',
    'access user contact forms',
    'search content',
    'use advanced search',
    'access user profiles',
  ));

  // editor role
  $role = new stdClass();
  $role->name = 'editor';
  user_role_save($role);

  user_role_grant_permissions($role->rid, array(
    'create article content',
    'delete any article content',
    'delete own article content',
    'delete revisions',
    'edit any article content',
    'edit own article content',
    'export nodes',
    'moderate content from needs_review to draft',
    'moderate content from needs_review to published',
    'moderate content from needs_review to validated',
    'moderate content from published to archived',
    'moderate content from validated to published',
    'moderate content from draft to needs_review',
    'use workbench_moderation my drafts tab',
    'use workbench_moderation needs review tab',
    'revert revisions',
    'view own unpublished content',
    'view all unpublished content',
  ));


  // define the theme used ------------------------------------------------------------------------------------------------------------------------------------------------------
  $enable = array(
    'theme_default' => 'ec_resp', // should be the our CCE theme
    'admin_theme' => 'seven',
  );
  theme_enable($enable);

  foreach ($enable as $var => $theme) {
    if (!is_numeric($var)) {
      variable_set($var, $theme);
    }
  }
  theme_disable(array('bartik')); // Disable the default Bartik theme

  // provide default images ----------------------------------------------------------------------------------------------------------------------------
  // default image for user picture
  $file = new stdClass();
  $file->fid = NULL;
  $file->uri = "public://default_images/user_default.png";
  $file->filename = "user_default.png";
  $file->filemime = file_get_mimetype($file->uri);
  $file->uid = 1;
  $file->status = FILE_STATUS_PERMANENT;
  $f = file_save($file);
  variable_set('user_picture_default', 'public://default_images/user_default.png');

  // default image for gallery media picture
  $file = new stdClass();
  $file->fid = NULL;
  $file->uri = "public://default_images/empty_gallery.png";
  $file->filename = "empty_gallery.png";
  $file->filemime = file_get_mimetype($file->uri);
  $file->uid = 1;
  $file->status = FILE_STATUS_PERMANENT;
  $f = file_save($file);
  variable_set('empty_gallery_default', 'public://default_images/empty_gallery.png');

  // setup settings ---------------------------------------------------------------------------------------------------------------------------------------------------------------------

  // language settings

  // set the url language prefix to 'en'
  db_update('languages')
    ->fields(array('prefix' => 'en'))
    ->condition('language', 'en')
    ->execute();

  // set the default language negociation --------------------------------------------------------------------------
  $lni = language_negotiation_info();
  $ln['language-default'] = $lni['language-default'];
  $ln['locale-url'] = $lni['locale-url'];
  language_negotiation_set('language', $ln);


  // blocks settings ----------------------------------------------------------------------------------------------------------------------------------------------------
  //Disable cloned Search Form Block --------------------------------------------------------------------------
  $dis_search = db_update('block') // Table name no longer needs {}
    ->fields(array(
    'region' => '-1',
    ))
    ->condition('module', 'search', '=')
    ->condition('delta', 'form', '=')
    ->execute();

  // disable block -------------------------------------------------------------------------------
  db_update('block')
  ->fields(array('region' => ''))
  ->condition('module', 'system', '=')
  ->condition('delta', 'navigation', '=')
  ->execute();

  db_update('block')
  ->fields(array('region' => ''))
  ->condition('module', 'user', '=')
  ->condition('delta', 'login', '=')
  ->execute();

  db_update('block')
  ->fields(array('region' => '-1'))
  ->condition('module', 'workbench', '=')
  ->condition('delta', 'block', '=')
  ->execute();

  db_update('block')
  ->fields(array('region' => ''))
  ->condition('module', 'system', '=')
  ->condition('delta', 'powered-by', '=')
  ->execute();

  // add login link in the user menu -------------------------------------------------------------------------------
  $options = array();
  $options['attributes']['class'][] = 'btn btn-default';
  $options['attributes']['data-image'] = 'log-in';

  $item = array(
    'link_path' => 'user/login',
    'link_title' => t('Login'),
    'menu_name' => 'user-menu',
    'options' => $options,
  );
  menu_link_save($item);

  // add workbench link to the user menu -------------------------------------------------------------------------------
  $options = array();
  $options['attributes']['class'][] = 'btn btn-info btn-xs';
  $options['attributes']['data-image'] = 'list-alt';

  $item = array(
    'link_path' => 'admin/workbench',
    'link_title' => t('My workbench'),
    'menu_name' => 'user-menu',
    'weight' => '-30',
    'options' => $options,
  );
  menu_link_save($item);

  // add search links in the main menu -------------------------------------------------------------------------------
  $item = array(
    'link_path' => 'search/site',
    'link_title' => t('Search'),
    'menu_name' => 'main-menu',
    'weight' => '19999'
  );
  menu_link_save($item);

  // update home link in the main menu ---------------------------------------------------------------------------------------
  $options = array();
  $options['attributes']['data-display-title'] = 0;
  $options['attributes']['data-image'] = 'home';

  db_update('menu_links')
    -> fields(array('options' => serialize($options), 'weight' => '-50'))
    -> condition('link_title', 'Home')
    -> condition('menu_name', 'main-menu')
    -> execute();
}
